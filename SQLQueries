# View for the questions

CREATE VIEW extendedBooking AS
  SELECT *,
  DATE_ADD(booking_date, INTERVAL nights - 1 DAY) AS leave_date,
  DATE_ADD(booking_date, INTERVAL nights DAY) AS checkout_date
  FROM booking


# QUESTION 11

SELECT
  guestX.last_name AS surname,
  MIN(guestX.first_name) AS first_person,
  MAX(guestX.first_name) AS second_person
FROM extendedbooking AS bookingX JOIN guest AS guestX ON bookingX.guest_id = guestX.id
WHERE guestX.last_name IN (
  SELECT guestY.last_name
  FROM extendedbooking AS bookingY
    JOIN guest AS guestY ON bookingY.guest_id = guestY.id
  WHERE bookingX.guest_id <> bookingY.guest_id
        AND
        (bookingX.booking_date <= bookingY.leave_date
         AND
         bookingX.leave_date >= bookingY.booking_date)
        AND
        guestX.last_name = guestY.last_name
)
GROUP BY Surname


# QUESTION 12

SELECT
  checkoutDay,
  SUM(CASE WHEN floor = 1 THEN dayAmount END) AS Floor_1,
  SUM(CASE WHEN floor = 2 THEN dayAmount END) AS Floor_2,
  SUM(CASE WHEN floor = 3 THEN dayAmount END) AS Floor_3
FROM (
  SELECT DAYNAME(checkout_date) AS checkoutDay,
    CASE
    WHEN room_no < 200 THEN 1
    WHEN room_no < 300 AND  room_no > 199 THEN 2
    ELSE 3
  END AS floor,
  COUNT(*) AS dayAmount
FROM extendedbooking
WHERE checkout_date BETWEEN '2016-11-14' AND DATE_ADD('2016-11-14', INTERVAL 6 DAY)
GROUP BY checkoutDay, floor
) AS amountByFloorAndDay
GROUP BY checkoutDay


# QUESTION 13

SELECT
  calendar.i,
  CASE
  WHEN last_name IS NULL THEN '--Available--' ELSE last_name
  END AS Surname
FROM calendar
  LEFT JOIN (
              SELECT
                *
              FROM extendedbooking
              WHERE room_no = 207
            )
    AS expandedBooking ON calendar.i BETWEEN expandedBooking.booking_date AND expandedBooking.leave_date
  LEFT JOIN guest ON expandedBooking.guest_id = guest.id
WHERE calendar.i BETWEEN '2016-11-21' AND DATE_ADD('2016-11-21', INTERVAL 6 DAY)

# QUESTION 14

SELECT
  edgeCaseBooking.room_no as room,
  edgeCaseBooking.availStart as avail,
  CASE WHEN edgeCaseBooking.availEnd IS NULL THEN '2016-12-19' ELSE edgeCaseBooking.availEnd END AS availEnd
FROM (
       SELECT
         extendedBooking.room_no,
         room_type_requested,
         checkout_date AS availStart,
         (
           SELECT MIN(secondBooking.booking_date)
           FROM booking secondBooking
           WHERE secondBooking.room_no = extendedBooking.room_no
                 AND secondBooking.booking_date > extendedBooking.booking_date
         ) AS availEnd
       FROM extendedBooking
       WHERE extendedBooking.room_type_requested = 'double'
     ) AS edgeCaseBooking
HAVING DATEDIFF(availEnd, availStart) >= 7
       AND
       (
         (availEnd >= '2016-12-19' AND availStart <= '2016-11-03')
         OR
         (availStart >= '2016-11-03' AND DATE_ADD(availStart, INTERVAL 7 - 1 DAY) <= '2016-12-19')
         OR
         (availStart <= '2016-11-03' AND availEnd >= DATE_ADD('2016-11-03', INTERVAL 7 - 1 DAY) )
       )



# QUESTION 15

SELECT
  calendar.i,
  COALESCE(
      (SELECT
         sum((extra.amount + (rate.amount * extendedBooking.nights))) AS totalDue
       FROM extendedBooking
         JOIN rate ON extendedBooking.room_type_requested = rate.room_type AND extendedBooking.occupants = rate.occupancy
         JOIN extra ON extra.booking_id = extendedBooking.booking_id
       WHERE checkout_date BETWEEN DATE_ADD(calendar.i, INTERVAL -6 DAY) AND calendar.i),
      0
  ) AS incomeToDate
FROM calendar
WHERE DAYNAME(calendar.i) = 'Thursday' AND MONTH(calendar.i) = 11 AND YEAR(calendar.i) = 2016
ORDER BY calendar.i
